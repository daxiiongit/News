<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 1.配置数据源，导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties" />

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>

        <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
    </bean>

    <!-- 2.配置Spring IoC 管理的 SessionFactory,通过 LocalSessionFactoryBean配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 配置数据源属性 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 引用hibernate配置文件的位置 -->
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
        <!-- 配置hibernate的映射文件 -->
        <property name="mappingLocations" value="classpath:com/sunyanxiong/entities/*.hbm.xml"></property>
    </bean>

    <!-- 3.配置Spring AOP 管理的声明式事务 -->
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 配置事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置切点，并把切点和事务属性关联起来 -->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.sunyanxiong.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

    <!-- 定义*DaoImpl类 -->
    <bean id="adminDao" class="com.sunyanxiong.dao.impl.AdminDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="newsinfoDao" class="com.sunyanxiong.dao.impl.NewsinfoDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="topicDao" class="com.sunyanxiong.dao.impl.TopicDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 定义*ServiceImpl类 -->
    <bean id="adminService" class="com.sunyanxiong.service.impl.AdminServiceImpl">
        <property name="adminDao" ref="adminDao"></property>
    </bean>

    <bean id="newsinfoService" class="com.sunyanxiong.service.impl.NewsinfoServiceImpl">
        <property name="newsinfoDao" ref="newsinfoDao"></property>
    </bean>

    <bean id="topicService" class="com.sunyanxiong.service.impl.TopicServiceImpl">
        <property name="topicDao" ref="topicDao"></property>
    </bean>


    <!-- 配置*Action类，并为其中属性注入相应的值 -->
    <bean id="adminAction" class="com.sunyanxiong.action.AdminAction" scope="prototype">
        <property name="adminService" ref="adminService"></property>
    </bean>

    <bean id="newsinfoAction" class="com.sunyanxiong.action.NewsinfoAction" scope="prototype">
        <property name="topicService" ref="topicService"></property>
        <property name="newsinfoService" ref="newsinfoService"></property>
    </bean>

    <bean id="topicAction" class="com.sunyanxiong.action.TopicAction" scope="prototype">
        <property name="topicService" ref="topicService"></property>
    </bean>

</beans>